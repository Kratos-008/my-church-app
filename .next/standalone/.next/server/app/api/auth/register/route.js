"use strict";(()=>{var e={};e.id=2,e.ids=[2],e.modules={53524:e=>{e.exports=require("@prisma/client")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},67547:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>v,requestAsyncStorage:()=>h,routeModule:()=>c,serverHooks:()=>x,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{POST:()=>l});var s=r(49303),i=r(88716),n=r(60670),u=r(53524),o=r(98691),p=r(87070);let d=new u.PrismaClient;async function l(e){let{name:t,email:r,password:a}=await e.json();if(!r||!a)return p.NextResponse.json({message:"Email and password are required"},{status:400});if(await d.user.findUnique({where:{email:r}}))return p.NextResponse.json({message:"User already exists"},{status:400});let s=await (0,o.vp)(a,10),i=await d.user.create({data:{name:t,email:r,password:s,role:"USER"}});return p.NextResponse.json({user:i})}let c=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/auth/register/route",pathname:"/api/auth/register",filename:"route",bundlePath:"app/api/auth/register/route"},resolvedPagePath:"C:\\Ivan\\masbate_church_fullsite\\masbate_church_fullsite\\app\\api\\auth\\register\\route.ts",nextConfigOutput:"standalone",userland:a}),{requestAsyncStorage:h,staticGenerationAsyncStorage:m,serverHooks:x}=c,g="/api/auth/register/route";function v(){return(0,n.patchFetch)({serverHooks:x,staticGenerationAsyncStorage:m})}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,885,972],()=>r(67547));module.exports=a})();